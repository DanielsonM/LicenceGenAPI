// <auto-generated />
using System;
using LicenceGenAPI.DbConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LicenceGenAPI.Migrations
{
    [DbContext(typeof(PostgreDbContext))]
    [Migration("20250415172408_CreateTables")]
    partial class CreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LicenceGenAPI.Models.LicenceModel", b =>
                {
                    b.Property<int>("intId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("int_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("intId"));

                    b.Property<string>("strDataExpiration")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_date_expiration");

                    b.Property<string>("strDateRequest")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_date_request");

                    b.Property<string>("strLicenceKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_licence_key");

                    b.Property<string>("strObservation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_observation");

                    b.Property<string>("strStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_status");

                    b.Property<string>("strUserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_user_name");

                    b.HasKey("intId");

                    b.ToTable("Licence");
                });

            modelBuilder.Entity("LicenceGenAPI.Models.UserModel", b =>
                {
                    b.Property<int>("intId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("int_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("intId"));

                    b.Property<DateTime>("dttRefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtt_refresh_token_expire_time");

                    b.Property<string>("strFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_full_name");

                    b.Property<string>("strPassword")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_password");

                    b.Property<string>("strRefreshToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_refresh_token");

                    b.Property<string>("strUserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_user_name");

                    b.HasKey("intId");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
